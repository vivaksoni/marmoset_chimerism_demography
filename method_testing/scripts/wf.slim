//Slim script to run a chromosomal region containing 33 genes, each comprised of 5 300bp exons, 4 100bp introns, and separated by a 1068bp //intergenic region.
//Demographic changes are instantaneous at a fixed time of change.
//How to run:
//slim -d d_seed=1 -d d_scaling_factor=200 -d d_regionLength=1000000 -d d_Nanc=1000000 -d d_Ncur=2000000 -d "rmap='fixed'" -d "mmap='fixed'" -d "d_folder='/home/vivak/rr_mu_demography_DFE/'" -d "d_simID='1Mb'" -d "d_repID='1'" general.slim

initialize()
{
    
    //define constants:
    defineConstant("d_Nanc", 10000);
    defineConstant("d_Ncur", 10000);
    defineConstant("scale", 1);
    defineConstant("regionLength", 1000000);
    defineConstant("Na", asInteger(round(d_Nanc/scale)));
    defineConstant("Nc", asInteger(round(d_Ncur/scale)));
    defineConstant("gen_burnin", 140000); //14N burnin (after which instantaneous size change occurs
    defineConstant("gen_stop", 140100); //0.01N of further evolution before sampling
 
    initializeMutationRate(2.5e-8);
    initializeRecombinationRate(1e-8);
	    
    // mutation types: 
    initializeMutationType("m1", 0.5, "f", 0); //effectively neutral
    

    // g1 genomic element type: uses m1 for all neutral mutations
    initializeGenomicElementType("g1", m1, 1.0); //intergenic
    
    initializeGenomicElement(g1, 0, regionLength-1);
 
}

// part 1 (burn-in for gen_burnin (=16Na) generations): create a population of Na individuals
1 late(){
    sim.addSubpop("p1", Na);
    //Set variables s1 and s2 for gen_burnin and gen_stop
    community.rescheduleScriptBlock(s1, start=gen_burnin, end=gen_burnin);
    community.rescheduleScriptBlock(s2, start=gen_stop, end=gen_stop);
}
// part 2: instantaneous population size change: reaches size N_cur
s1 late(){
    newSize = Nc;
    p1.setSubpopulationSize(asInteger(newSize));
}
//print genotypes of 100 individuals selected randomly without replacement:
//gen_stop = gen_burnin + time of change
s2 late() {
    p1.outputVCFSample(10, filePath=d_folder + "/" + d_simID + "_rep" + d_repID + ".vcf");
}
